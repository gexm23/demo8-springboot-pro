<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qfedu.dao.CustomerMapper">
    <sql id="Base_Column_List">
        identity ,custname ,sex , address , phone , career , createtime
    </sql>

    <resultMap id="BaseResultMap" type="com.qfedu.pojo.Customer">
        <id column="identity" jdbcType="VARCHAR" property="identity"></id>
        <result column="custname" jdbcType="VARCHAR" property="custname"></result>
        <result column="sex" jdbcType="INTEGER" property="sex"></result>
        <result column="address" jdbcType="VARCHAR" property="address"></result>
        <result column="phone" jdbcType="VARCHAR" property="phone"></result>
        <result column="career" jdbcType="VARCHAR" property="career"></result>
        <result column="createtime" jdbcType="TIMESTAMP" property="createtime"></result>
    </resultMap>
    <select id="queryAllCustomer" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"/>
        from t_customer
        <where>
            <if test="identity != null and identity != ''">
                and identity  like concat("%",#{identity},"%")
            </if>
            <if test="custname != null and custname != ''">
                and custname  like concat("%",#{custname},"%")
            </if>
            <if test="phone != null and phone != ''">
                and phone  like concat("%",#{phone},"%")
            </if>
            <if test="career != null and career != ''">
                and career  like concat("%",#{career},"%")
            </if>
            <if test="address != null and address != ''">
                and address  like concat("%",#{address},"%")
            </if>
            <if test="sex != null ">
                and sex = #{sex}
            </if>
        </where>
        order by createtime desc
    </select>

    <!--添加客户-->
    <insert id="addCustomer" parameterType="com.qfedu.vo.CustomerVo">
        insert into t_customer
         <trim prefix="(" suffix=")" suffixOverrides=",">
             <if test="identity != null">
                 identity,
             </if>
             <if test="custname != null">
                 custname,
             </if>
             <if test="sex != null">
                 sex,
             </if>
             <if test="address != null">
                 address,
             </if>
             <if test="phone != null">
                 phone,
             </if>
             <if test="career != null">
                 career,
             </if>
             <if test="createtime != null">
                 createtime,
             </if>
         </trim>
         <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="identity != null">
                #{identity},
            </if>
            <if test="custname != null">
                #{custname},
            </if>
            <if test="sex != null">
                #{sex},
            </if>
            <if test="address != null">
                #{address},
            </if>
            <if test="phone != null">
                #{phone},
            </if>
            <if test="career != null">
                #{career},
            </if>
            <if test="createtime != null">
                #{createtime},
            </if>
        </trim>
    </insert>

    <!--修改客户信息-->
    <update id="updateCustomer">
        update t_customer
        <set>
            <if test="custname != null">
                custname = #{custname},
            </if>
            <if test="sex != null">
                sex = #{sex},
            </if>
            <if test="address != null">
                address = #{address},
            </if>
            <if test="phone != null">
                phone = #{phone},
            </if>
            <if test="career != null">
                career = #{career},
            </if>
        </set>
        where identity = #{identity }
    </update>


    <!--删除客户信息-->
    <delete id="deleteCustomer">
        delete from t_customer where identity = #{identity }
    </delete>
</mapper>